{"version":3,"sources":["types.ts"],"names":["NetInfoStateType","NetInfoCellularGeneration"],"mappings":"AASA,UAAYA,CAAAA,gBAAZ,C,UAAYA,gB,EAAAA,gB,sBAAAA,gB,gBAAAA,gB,wBAAAA,gB,gBAAAA,gB,0BAAAA,gB,wBAAAA,gB,kBAAAA,gB,cAAAA,gB,qBAAAA,gB,GAAAA,gB,MAYZ,UAAYC,CAAAA,yBAAZ,C,UAAYA,yB,EAAAA,yB,YAAAA,yB,YAAAA,yB,eAAAA,yB,GAAAA,yB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n */\r\n\r\nexport enum NetInfoStateType {\r\n  unknown = 'unknown',\r\n  none = 'none',\r\n  cellular = 'cellular',\r\n  wifi = 'wifi',\r\n  bluetooth = 'bluetooth',\r\n  ethernet = 'ethernet',\r\n  wimax = 'wimax',\r\n  vpn = 'vpn',\r\n  other = 'other',\r\n}\r\n\r\nexport enum NetInfoCellularGeneration {\r\n  '2g' = '2g',\r\n  '3g' = '3g',\r\n  '4g' = '4g',\r\n}\r\n\r\nexport interface NetInfoConnectedDetails {\r\n  isConnectionExpensive: boolean;\r\n}\r\n\r\ninterface NetInfoConnectedState<\r\n  T extends NetInfoStateType,\r\n  D extends object = {}\r\n> {\r\n  type: T;\r\n  isConnected: true;\r\n  isInternetReachable: boolean | null | undefined;\r\n  details: D & NetInfoConnectedDetails;\r\n}\r\n\r\ninterface NetInfoDisconnectedState<T extends NetInfoStateType> {\r\n  type: T;\r\n  isConnected: false;\r\n  isInternetReachable: false;\r\n  details: null;\r\n}\r\n\r\nexport type NetInfoUnknownState = NetInfoDisconnectedState<\r\n  NetInfoStateType.unknown\r\n>;\r\nexport type NetInfoNoConnectionState = NetInfoDisconnectedState<\r\n  NetInfoStateType.none\r\n>;\r\nexport type NetInfoDisconnectedStates =\r\n  | NetInfoUnknownState\r\n  | NetInfoNoConnectionState;\r\n\r\nexport type NetInfoCellularState = NetInfoConnectedState<\r\n  NetInfoStateType.cellular,\r\n  {\r\n    cellularGeneration: NetInfoCellularGeneration | null;\r\n    carrier: string | null;\r\n  }\r\n>;\r\nexport type NetInfoWifiState = NetInfoConnectedState<\r\n  NetInfoStateType.wifi,\r\n  {\r\n    ipAddress: string | null;\r\n    subnet: string | null;\r\n  }\r\n>;\r\nexport type NetInfoBluetoothState = NetInfoConnectedState<\r\n  NetInfoStateType.bluetooth\r\n>;\r\nexport type NetInfoEthernetState = NetInfoConnectedState<\r\n  NetInfoStateType.ethernet,\r\n  {\r\n    ipAddress: string | null;\r\n    subnet: string | null;\r\n  }\r\n>;\r\nexport type NetInfoWimaxState = NetInfoConnectedState<NetInfoStateType.wimax>;\r\nexport type NetInfoVpnState = NetInfoConnectedState<NetInfoStateType.vpn>;\r\nexport type NetInfoOtherState = NetInfoConnectedState<NetInfoStateType.other>;\r\nexport type NetInfoConnectedStates =\r\n  | NetInfoCellularState\r\n  | NetInfoWifiState\r\n  | NetInfoBluetoothState\r\n  | NetInfoEthernetState\r\n  | NetInfoWimaxState\r\n  | NetInfoVpnState\r\n  | NetInfoOtherState;\r\n\r\nexport type NetInfoState = NetInfoDisconnectedStates | NetInfoConnectedStates;\r\n\r\nexport type NetInfoChangeHandler = (state: NetInfoState) => void;\r\nexport type NetInfoSubscription = () => void;\r\n\r\nexport interface NetInfoConfiguration {\r\n  reachabilityUrl: string;\r\n  reachabilityTest: (response: Response) => Promise<boolean>;\r\n  reachabilityLongTimeout: number;\r\n  reachabilityShortTimeout: number;\r\n  reachabilityRequestTimeout: number;\r\n}\r\n"]}