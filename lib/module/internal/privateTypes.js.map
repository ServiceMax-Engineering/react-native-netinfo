{"version":3,"sources":["privateTypes.ts"],"names":["DEVICE_CONNECTIVITY_EVENT"],"mappings":"AAWA,MAAO,IAAMA,CAAAA,yBAAyB,CAAG,gCAAlC","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n */\r\n\r\nimport {NetInfoState} from './types';\r\n\r\nexport const DEVICE_CONNECTIVITY_EVENT = 'netInfo.networkStatusDidChange';\r\n\r\n// Certain properties are optional when sent by the native module and are handled by the JS code\r\nexport type NetInfoNativeModuleState = Pick<\r\n  NetInfoState,\r\n  Exclude<keyof NetInfoState, 'isInternetReachable'>\r\n> & {isInternetReachable?: boolean};\r\n\r\nexport interface Events {\r\n  [DEVICE_CONNECTIVITY_EVENT]: NetInfoNativeModuleState;\r\n}\r\n\r\nexport interface NetInfoNativeModule {\r\n  getCurrentState: (\r\n    requestedInterface?: string,\r\n  ) => Promise<NetInfoNativeModuleState>;\r\n  addListener<K extends keyof Events>(\r\n    type: K,\r\n    listener: (event: Events[K]) => void,\r\n  ): void;\r\n  removeListeners<K extends keyof Events>(\r\n    type: K,\r\n    listener: (event: Events[K]) => void,\r\n  ): void;\r\n}\r\n\r\nexport type NetInfoInternetReachabilityChangeListener = (\r\n  isInternetReachable: boolean | null | undefined,\r\n) => void;\r\n"]}